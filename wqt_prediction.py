# -*- coding: utf-8 -*-
"""WQT Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13Az44WnylcsGT0Xg4W0J5TCdJBzEEwTP
"""

# Importing all the necessary libraries which are required in my model

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# uploading the dataset which comtains the following parameters used for making predictions

data = pd.read_csv('WineQT.csv')
data.head()

# Define features and target variable

data.drop(['Id'], axis=1, inplace=True)  # excluding 'Id' from our dataset which is not required
data.head()

x = data.iloc[:,:-1]
y = data.iloc[:,-1]

# Split the dataset into training and testing sets with ratio of 80:20

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# x_train contains following fields

x_train.head()

# y_train contains following fields

y_train.head()

# Among various regression algorithms i'm using multivariable regression model
# Initializing the model

model = LinearRegression()

# Training the model by fitting training values

model.fit(x_train, y_train)

# Making predictions by giving parameter as X_text

y_pred = model.predict(x_test)

# Plotting the actual vs predicted values

plt.figure(figsize=(8, 5))
plt.scatter(y_test, y_pred, color='blue', alpha=1)
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linewidth=4)
plt.title('Actual vs Predicted Wine Quality')
plt.xlabel('Actual Quality')
plt.ylabel('Predicted Quality')
plt.grid(True)
plt.show()

model.score(X_test, y_test)

# Evaluating the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
mse, r2

model.coef_

model.intercept_

